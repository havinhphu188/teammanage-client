{"version":3,"file":"static/webpack/static\\development\\pages\\project-board.js.7c134cab00560b04d82c.hot-update.js","sources":["webpack:///./components/AssignMemberDialog.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport axios from \"axios\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nexport default class AssignMemberDialog extends React.Component {\r\n\r\n  state = {\r\n    members:[],\r\n    chosenMembers:[]\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if ((this.props.open === true) && (prevProps.open === false) ){\r\n      axios.get('http://localhost:7900/api/get-unassigned-members',{\r\n        params: {\r\n          id: this.props.projectId\r\n        }\r\n      })\r\n      .then(\r\n        (response) =>{\r\n          this.setState(\r\n            { \r\n              members: response.data , \r\n              chosenMembers: Array(response.data.length).fill(false) // chosen state\r\n            });\r\n        } \r\n       )\r\n       .catch(err=> console.log(err));\r\n    }\r\n  }\r\n\r\n  // when click on check box , change state of chosen member This dialog, check box is managed in state \r\n  handleToggle = function(id){\r\n    let newChosenList = this.state.chosenMembers;\r\n    newChosenList[id] = !newChosenList[id];\r\n    this.setState({\r\n      chosenMembers: newChosenList\r\n    });\r\n  }\r\n\r\n  assignMember = function(){\r\n    let assignMemberId = [];\r\n    for (var i=0; i < this.state.chosenMembers.length; i++){\r\n      if (this.state.chosenMembers[i]){\r\n        assignMemberId.push(this.state.members[i].id);\r\n      }        \r\n    }\r\n    this.props.assignMember(assignMemberId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.open}\r\n        onClose={this.props.handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Assign New Member</DialogTitle>\r\n          <List dense >\r\n          {this.state.members.map((member,index) => (\r\n            <ListItem key={member.id}>\r\n              <ListItemText primary={member.member_name} />\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  onChange={() => this.handleToggle(index)}\r\n                  checked={this.state.chosenMembers[index]}\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        }      \r\n        {/* </DialogContent> */}\r\n        <DialogActions>\r\n          <Button onClick={this.props.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.assignMember()} color=\"primary\">\r\n            Add Member\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAyBA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AAtCA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAOA;AAEA;AACA;AACA;AAHA;AAIA;AAEA;AAAA;AACA;AACA;AACA;;;AAoBA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA/EA;AACA;;;;;A","sourceRoot":""}